{"version":3,"sources":["../src/index.ts"],"sourcesContent":["export type Listener = ((..._args: unknown[]) => void) & {\n  onCleanup?: (_release: () => void) => void;\n};\n\nclass Notifier {\n  private _listeners: Record<string, Set<Listener>> = {};\n\n  addListener(event: string, listener: Listener): () => void {\n    if (typeof event !== \"string\" || typeof listener !== \"function\") {\n      throw new Error(\"Event name must be a string, listener must be a function\");\n    }\n\n    if (!this._listeners[event]) {\n      this._listeners[event] = new Set();\n    }\n\n    const cleanup = () => this.removeListener(event, listener);\n\n    if (!this._listeners[event].has(listener)) {\n      this._listeners[event].add(listener);\n      if (typeof listener.onCleanup === \"function\") {\n        listener.onCleanup(cleanup);\n      }\n    }\n\n    return cleanup;\n  }\n\n  removeListener(event: string, listener: Listener): void {\n    if (typeof event !== \"string\" || typeof listener !== \"function\") {\n      throw new Error(\"Event name must be a string, listener must be a function\");\n    }\n\n    const listeners = this._listeners[event];\n    if (listeners && listeners.has(listener)) {\n      listeners.delete(listener);\n      if (listeners.size === 0) {\n        delete this._listeners[event];\n      }\n    }\n  }\n\n  notify(event: string, ...args: unknown[]): void {\n    const listeners = this._listeners[event];\n    if (listeners) {\n      const listenersArray = [...listeners];\n      for (const listener of listenersArray) {\n        listener(...args);\n      }\n    }\n  }\n}\n\nexport default Notifier;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,IAAM,WAAN,MAAe;AAAA,EAAf;AACE,SAAQ,aAA4C,CAAC;AAAA;AAAA,EAErD,YAAY,OAAe,UAAgC;AACzD,QAAI,OAAO,UAAU,YAAY,OAAO,aAAa,YAAY;AAC/D,YAAM,IAAI,MAAM,0DAA0D;AAAA,IAC5E;AAEA,QAAI,CAAC,KAAK,WAAW,KAAK,GAAG;AAC3B,WAAK,WAAW,KAAK,IAAI,oBAAI,IAAI;AAAA,IACnC;AAEA,UAAM,UAAU,MAAM,KAAK,eAAe,OAAO,QAAQ;AAEzD,QAAI,CAAC,KAAK,WAAW,KAAK,EAAE,IAAI,QAAQ,GAAG;AACzC,WAAK,WAAW,KAAK,EAAE,IAAI,QAAQ;AACnC,UAAI,OAAO,SAAS,cAAc,YAAY;AAC5C,iBAAS,UAAU,OAAO;AAAA,MAC5B;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,eAAe,OAAe,UAA0B;AACtD,QAAI,OAAO,UAAU,YAAY,OAAO,aAAa,YAAY;AAC/D,YAAM,IAAI,MAAM,0DAA0D;AAAA,IAC5E;AAEA,UAAM,YAAY,KAAK,WAAW,KAAK;AACvC,QAAI,aAAa,UAAU,IAAI,QAAQ,GAAG;AACxC,gBAAU,OAAO,QAAQ;AACzB,UAAI,UAAU,SAAS,GAAG;AACxB,eAAO,KAAK,WAAW,KAAK;AAAA,MAC9B;AAAA,IACF;AAAA,EACF;AAAA,EAEA,OAAO,UAAkB,MAAuB;AAC9C,UAAM,YAAY,KAAK,WAAW,KAAK;AACvC,QAAI,WAAW;AACb,YAAM,iBAAiB,CAAC,GAAG,SAAS;AACpC,iBAAW,YAAY,gBAAgB;AACrC,iBAAS,GAAG,IAAI;AAAA,MAClB;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,gBAAQ;","names":[]}