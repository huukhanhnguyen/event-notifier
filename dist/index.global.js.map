{"version":3,"sources":["../src/index.ts"],"sourcesContent":["export type Listener = ((...args: any[]) => any) & {\r\n  afterSubscribe?: (unsubscribe: () => void) => void;\r\n};\r\n\r\nclass Notifier {\r\n  private _listeners: Record<string, Set<Listener>> = {};\r\n\r\n  addListener(event: string, listener: Listener): () => void {\r\n    if (typeof event !== \"string\" || typeof listener !== \"function\") {\r\n      throw new Error(\"Event name must be a string, listener must be a function\");\r\n    }\r\n\r\n    if (!this._listeners[event]) {\r\n      this._listeners[event] = new Set();\r\n    }\r\n\r\n    const unsubscribe = () => this.removeListener(event, listener);\r\n\r\n    if (!this._listeners[event].has(listener)) {\r\n      this._listeners[event].add(listener);\r\n      if (typeof listener.afterSubscribe === \"function\") {\r\n        listener.afterSubscribe(unsubscribe);\r\n      }\r\n    }\r\n\r\n    return unsubscribe;\r\n  }\r\n\r\n  removeListener(event: string, listener: Listener): void {\r\n    if (typeof event !== \"string\" || typeof listener !== \"function\") {\r\n      throw new Error(\"Event name must be a string, listener must be a function\");\r\n    }\r\n\r\n    const listeners = this._listeners[event];\r\n    if (listeners && listeners.has(listener)) {\r\n      listeners.delete(listener);\r\n      if (listeners.size === 0) {\r\n        delete this._listeners[event];\r\n      }\r\n    }\r\n  }\r\n\r\n  notify(event: string, ...args: unknown[]): void {\r\n    const listeners = this._listeners[event];\r\n    if (listeners) {\r\n      const listenersArray = [...listeners];\r\n      for (const listener of listenersArray) {\r\n        listener(...args);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Notifier;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAIA,MAAM,WAAN,MAAe;AAAA,IAAf;AACE,WAAQ,aAA4C,CAAC;AAAA;AAAA,IAErD,YAAY,OAAe,UAAgC;AACzD,UAAI,OAAO,UAAU,YAAY,OAAO,aAAa,YAAY;AAC/D,cAAM,IAAI,MAAM,0DAA0D;AAAA,MAC5E;AAEA,UAAI,CAAC,KAAK,WAAW,KAAK,GAAG;AAC3B,aAAK,WAAW,KAAK,IAAI,oBAAI,IAAI;AAAA,MACnC;AAEA,YAAM,cAAc,MAAM,KAAK,eAAe,OAAO,QAAQ;AAE7D,UAAI,CAAC,KAAK,WAAW,KAAK,EAAE,IAAI,QAAQ,GAAG;AACzC,aAAK,WAAW,KAAK,EAAE,IAAI,QAAQ;AACnC,YAAI,OAAO,SAAS,mBAAmB,YAAY;AACjD,mBAAS,eAAe,WAAW;AAAA,QACrC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,eAAe,OAAe,UAA0B;AACtD,UAAI,OAAO,UAAU,YAAY,OAAO,aAAa,YAAY;AAC/D,cAAM,IAAI,MAAM,0DAA0D;AAAA,MAC5E;AAEA,YAAM,YAAY,KAAK,WAAW,KAAK;AACvC,UAAI,aAAa,UAAU,IAAI,QAAQ,GAAG;AACxC,kBAAU,OAAO,QAAQ;AACzB,YAAI,UAAU,SAAS,GAAG;AACxB,iBAAO,KAAK,WAAW,KAAK;AAAA,QAC9B;AAAA,MACF;AAAA,IACF;AAAA,IAEA,OAAO,UAAkB,MAAuB;AAC9C,YAAM,YAAY,KAAK,WAAW,KAAK;AACvC,UAAI,WAAW;AACb,cAAM,iBAAiB,CAAC,GAAG,SAAS;AACpC,mBAAW,YAAY,gBAAgB;AACrC,mBAAS,GAAG,IAAI;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,MAAO,gBAAQ;","names":[]}